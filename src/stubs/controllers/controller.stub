<?php

namespace {{NAMESPACE}};

use {{MODEL_NAMESPACE}};
use {{RESOURCE_NAMESPACE}};
use {{REQUEST_NAMESPACE}};
use {{RESOURCE_COLLECTION_NAMESPACE}};
use Exception;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Http\JsonResponse;

class {{CONTROLLER_NAME}} extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return {{RESOURCE_COLLECTION_NAMESPACE}}
     * @throws AuthorizationException
     */
    public function index(): {{RESOURCE_COLLECTION_NAMESPACE}}
    {
        $this->authorize('viewAny', {{MODEL_CLASS}}::class);

        {{INDEX_METHOD}}
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{REQUEST_NAMESPACE}}  $request
     * @return \{{RESOURCE_NAMESPACE}}
     * @throws AuthorizationException
     */
    public function store({{REQUEST_CLASS}} $request): \{{RESOURCE_NAMESPACE}}
    {
        $this->authorize('create', {{MODEL_CLASS}}::class);

        {{STORE_METHOD}}
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{MODEL_NAMESPACE}}  ${{MODEL_VARIABLE}}
     * @return \{{RESOURCE_NAMESPACE}}
     * @throws AuthorizationException
     */
    public function show({{MODEL_CLASS}} ${{MODEL_VARIABLE}}): \{{RESOURCE_NAMESPACE}}
    {
        $this->authorize('view', ${{MODEL_VARIABLE}});

        {{SHOW_METHOD}}
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{REQUEST_NAMESPACE}}  $request
     * @param  \{{MODEL_NAMESPACE}}  ${{MODEL_VARIABLE}}
     * @return \{{RESOURCE_NAMESPACE}}
     * @throws AuthorizationException
     */
    public function update({{REQUEST_CLASS}} $request, {{MODEL_CLASS}} ${{MODEL_VARIABLE}}): \{{RESOURCE_NAMESPACE}}
    {
        $this->authorize('update', ${{MODEL_VARIABLE}});

        {{UPDATE_METHOD}}
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{MODEL_NAMESPACE}}  ${{MODEL_VARIABLE}}
     * @return JsonResponse
     * @throws AuthorizationException
     * @throws Exception
     */
    public function destroy({{MODEL_CLASS}} ${{MODEL_VARIABLE}}): JsonResponse
    {
        $this->authorize('delete', ${{MODEL_VARIABLE}});

        {{DESTROY_METHOD}}
    }
}
